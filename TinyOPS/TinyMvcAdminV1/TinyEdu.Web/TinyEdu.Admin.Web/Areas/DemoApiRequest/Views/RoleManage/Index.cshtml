@using TinyEdu.Enum;
@using TinyEdu.Util.Extension;
@{
    ViewData["Title"] = "角色管理Api Index";
    Layout = "~/Views/Shared/_Index.cshtml";
}
<div class="container-div">
    <div class="row">
        <div id="searchDiv" class="col-sm-12 search-collapse">
            <div class="select-list">
                <ul>
                    <li>
                        角色名称：<input id="roleName" col="RoleName" type="text" />
                    </li>
                    <li>
                        角色状态：<span id="roleStatus" col="RoleStatus"></span>
                    </li>
                    <li class="select-time">
                        <label>创建时间： </label>
                        <input id="startTime" col="StartTime" type="text" class="time-input" placeholder="开始时间" />
                        <span>-</span>
                        <input id="endTime" col="EndTime" type="text" class="time-input" placeholder="结束时间" />
                    </li>
                    <li>
                        <a id="btnSearch" class="btn btn-primary btn-sm" onclick="searchGrid()"><i class="fa fa-search"></i>&nbsp;搜索</a>
                    </li>
                </ul>
            </div>
        </div>
        <div class="btn-group-sm hidden-xs" id="toolbar">
            <a id="btnAdd" class="btn btn-success" onclick="showSaveForm(true)"><i class="fa fa-plus"></i> 新增</a>
            <a id="btnEdit" class="btn btn-primary disabled" onclick="showSaveForm(false)"><i class="fa fa-edit"></i> 修改</a>
            <a id="btnDelete" class="btn btn-danger disabled" onclick="deleteForm()"><i class="fa fa-remove"></i> 删除</a>
        </div>

        <div class="col-sm-12 select-table table-striped">
            <table id="gridTable" data-mobile-responsive="true"></table>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        var appSign = g_sign;
        
        initGrid(appSign);

        $("#roleStatus").ysComboBox({ data: tinyedu.getJson(@Html.Raw(typeof(StatusEnum).EnumToDictionaryString())) });

        laydate.render({ elem: '#startTime', format: 'yyyy-MM-dd' });
        laydate.render({ elem: '#endTime', format: 'yyyy-MM-dd' });
    });

    var getConditionJson = function (params) {
        var pagination = $('#gridTable').ysTable('getPagination', params);
        var divparam = $("#searchDiv").getWebControls(pagination);
        var paramjson = {
            pagination: pagination,
            param: divparam
        };
        return paramjson;
    }

    function initGrid(appSign) {
        //var queryUrl = 'Url.Content("~/SystemManage/Role/GetPageListJson")';
        var queryUrl = configuration.tscapiurl + '/api/ApiRole/GetPageListJson';
        $('#gridTable').ysTable({
            method: 'post', //请求方式
            contentType: 'application/json',
            dataType: 'json',
            url: queryUrl,
            sortName: 'RoleSort',
            sortOrder: 'Asc',
            columns: [
                { checkbox: true, visible: true },
                { field: 'Id', title: 'Id', visible: false },
                { field: 'RoleName', title: '角色名称', width: "15%",sortable: true },
                { field: 'RoleSort', title: '显示顺序', width: "15%",sortable: true },
                {
                    field: 'RoleStatus', title: '状态', width: "15%",
                    formatter: function (value, row, index) {
                        if (value == "@StatusEnum.Yes.ParseToInt()") {
                            return '<span class="badge badge-primary">' + "@StatusEnum.Yes.GetDescription()" + '</span>';
                        } else {
                            return '<span class="badge badge-warning">' + "@StatusEnum.No.GetDescription()" + '</span>';
                        }
                    }
                },
                {
                    field: 'BaseModifyTime', title: '创建时间', formatter: function (value, row, index) {
                        return tinyedu.formatDate(value, "yyyy-MM-dd HH:mm:ss");
                    }
                }
            ],
            ajaxOptions: {
                headers: { "Sign": appSign }
            },
            queryParams: function (params) {
                var _json = getConditionJson(params);
                //var param = {
                //    param: _json.param,
                //    pagination: _json.pagination
                //};
                return _json;
            }
        });
    }

    function searchGrid() {
        $('#gridTable').ysTable('search');
        resetToolbarStatus();
    }

    function showSaveForm(bAdd) {
        var id = 0;
        if (!bAdd) {
            var selectedRow = $("#gridTable").bootstrapTable("getSelections");
            if (!tinyedu.checkRowEdit(selectedRow)) {
                return;
            }
            else {
                id = selectedRow[0].Id;
            }
        }
        tinyedu.openDialog({
            title: id > 0 ? "编辑角色" : "添加角色",
            content: '@Url.Content("~/DemoApiRequest/RoleManage/Edit")' + '?id=' + id,
            width: "780px",
            height: "550px",
            callback: function (index, layero) {
                var iframeWin = window[layero.find('iframe')[0]['name']];
                iframeWin.saveForm(index);
            }
        });
    }

    function deleteForm() {
        var selectedRow = $("#gridTable").bootstrapTable("getSelections");
        if (tinyedu.checkRowDelete(selectedRow)) {
            var appSign = g_sign;
            console.log(appSign);
            tinyedu.confirm("确认要删除选中的" + selectedRow.length + "条数据吗？", function () {
                var ids = tinyedu.getIds(selectedRow);
                tinyedu.ajax({
                    url: configuration.tscapiurl +'/api/ApiRole/DeleteFormJson' + '?ids=' + ids,
                    type: "post",
                    headers: { "Sign": appSign },
                    success: function (obj) {
                        if (obj.Tag == 1) {
                            tinyedu.msgSuccess(obj.Message);
                            searchGrid();
                        }
                        else {
                            tinyedu.msgError(obj.Message);
                        }
                    }
                });
            });
        }
    }
</script>
